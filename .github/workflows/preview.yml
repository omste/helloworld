name: PR Preview & Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/helloworld-docker-repo
  IMAGE_NAME: nextjs-app-preview

jobs:
  lint_and_test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.STORE_PATH }}
            .next/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Run Unit Tests
        run: pnpm test:unit

  preview_deploy:
    name: Preview Deployment
    needs: lint_and_test
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.url_output.outputs.preview_url }}
    
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate preview name
        id: preview_name
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          PREVIEW_NAME="${{ secrets.CLOUD_RUN_SERVICE_NAME }}-pr-${PR_NUMBER}"
          echo "preview_name=${PREVIEW_NAME}" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'
          token_format: 'access_token'
          create_credentials_file: true

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install beta components
        run: gcloud components install beta --quiet

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NEXT_TELEMETRY_DISABLED=1

      - name: Deploy Preview to Cloud Run
        id: deploy
        run: |
          PREVIEW_URL=$(gcloud run deploy ${{ steps.preview_name.outputs.preview_name }} \
            --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }} \
            --region ${{ secrets.CLOUD_RUN_REGION }} \
            --platform managed \
            --quiet \
            --allow-unauthenticated \
            --set-env-vars="NODE_ENV=production" \
            --tag pr-${{ github.event.number }} \
            --format='get(status.url)')
          echo "PREVIEW_URL=${PREVIEW_URL}" >> $GITHUB_ENV

      - name: Set safe preview URL output
        id: url_output
        run: |
          echo "preview_url=${PREVIEW_URL}" >> $GITHUB_OUTPUT

      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = process.env.PREVIEW_URL;
            const message = `ðŸš€ Preview deployment is ready!\n\nYou can view your changes at: ${previewUrl}\n\nThis preview environment will be automatically cleaned up when the PR is closed.`;
            
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview deployment is ready!')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }

  e2e_tests:
    name: E2E Tests
    needs: preview_deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm playwright install --with-deps

      - name: Run E2E tests against preview
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.preview_deploy.outputs.preview_url }}
        run: pnpm test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30 