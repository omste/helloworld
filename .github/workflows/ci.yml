name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint_unit_build:
    name: Lint, Unit Test, and Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm lint
      - name: Run Unit Tests
        run: pnpm test:unit
      - name: Build Next.js app
        run: pnpm build

  deploy_to_cloud_run:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: lint_unit_build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev

      - name: Build and Push Docker image
        env:
          IMAGE_NAME: ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}
        run: |
          docker build . -t $IMAGE_NAME
          docker push $IMAGE_NAME

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE_NAME }} \
            --image ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ secrets.CLOUD_RUN_REGION }} \
            --platform managed \
            --quiet \
            --allow-unauthenticated \
            --set-env-vars="PORT=3000" \
            --format='value(status.url)' 